{"version":3,"sources":["index.tsx"],"names":["React","StyleSheet","createNavigator","SceneView","SwitchRouter","Transitioning","Transition","DEFAULT_TRANSITION","AnimatedSwitchView","containerRef","createRef","prevProps","prevState","navigation","state","prevActiveKey","routes","index","key","props","activeKey","current","animateNextTransition","navigationConfig","descriptor","descriptors","ChildComponent","getComponent","transition","transitionViewStyle","styles","container","screenProps","Component","createAnimatedSwitchNavigator","routeConfigMap","switchConfig","router","Navigator","create","flex"],"mappings":"6ZAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,OAASC,UAAT,KAAsC,cAAtC,CAUA,OACEC,eADF,CAEEC,SAFF,CAGEC,YAHF,KAIO,wBAJP,CAKA,OAEEC,aAFF,CAGEC,UAHF,KAIO,yBAJP,CAMA,GAAMC,CAAAA,kBAAkB,CACtB,oBAAC,UAAD,CAAY,QAAZ,kDACE,oBAAC,UAAD,CAAY,GAAZ,EAAgB,IAAI,CAAC,MAArB,CAA4B,UAAU,CAAE,GAAxC,CAA6C,aAAa,CAAC,QAA3D,iDADF,CAEE,oBAAC,UAAD,CAAY,EAAZ,EAAe,IAAI,CAAC,MAApB,CAA2B,UAAU,CAAE,GAAvC,iDAFF,CADF,C,GAeMC,CAAAA,kB,8aACJC,Y,CAAeT,KAAK,CAACU,SAAN,E,4GAEIC,S,CAAkB,IACpBC,CAAAA,SADoB,CACND,SAAS,CAACE,UADJ,CAC3BC,KAD2B,CAEnC,GAAMC,CAAAA,aAAa,CAAGH,SAAS,CAACI,MAAV,CAAiBJ,SAAS,CAACK,KAA3B,EAAkCC,GAAxD,CAFmC,GAG3BJ,CAAAA,KAH2B,CAGjB,KAAKK,KAAL,CAAWN,UAHM,CAG3BC,KAH2B,CAInC,GAAMM,CAAAA,SAAS,CAAGN,KAAK,CAACE,MAAN,CAAaF,KAAK,CAACG,KAAnB,EAA0BC,GAA5C,CAEA,GAAIE,SAAS,GAAKL,aAAd,EAA+B,KAAKN,YAAL,CAAkBY,OAArD,CAA8D,CAC5D,KAAKZ,YAAL,CAAkBY,OAAlB,CAA0BC,qBAA1B,GACD,CACF,C,uCAEQ,2BAC6B,KAAKH,KAAL,CAAWN,UADxC,CACCC,KADD,uBACCA,KADD,CACQS,gBADR,uBACQA,gBADR,CAEP,GAAMH,CAAAA,SAAS,CAAGN,KAAK,CAACE,MAAN,CAAaF,KAAK,CAACG,KAAnB,EAA0BC,GAA5C,CACA,GAAMM,CAAAA,UAAU,CAAG,KAAKL,KAAL,CAAWM,WAAX,CAAuBL,SAAvB,CAAnB,CACA,GAAMM,CAAAA,cAAc,CAAGF,UAAU,CAACG,YAAX,EAAvB,CAEA,GAAMC,CAAAA,UAAU,CACbL,gBAAgB,EAAIA,gBAAgB,CAACK,UAAtC,EAAqDrB,kBADvD,CAEA,GAAMsB,CAAAA,mBAAmB,CAAGN,gBAAgB,EAAIA,gBAAgB,CAACK,UAAjE,CAEA,MACE,qBAAC,aAAD,CAAe,IAAf,EACE,GAAG,CAAE,KAAKnB,YADZ,CAEE,UAAU,CAAEmB,UAFd,CAGE,KAAK,CAAE,CAACE,MAAM,CAACC,SAAR,CAAmBF,mBAAnB,CAHT,iDAKE,oBAAC,SAAD,EACE,SAAS,CAAEH,cADb,CAEE,UAAU,CAAEF,UAAU,CAACX,UAFzB,CAGE,WAAW,CAAE,KAAKM,KAAL,CAAWa,WAH1B,iDALF,CADF,CAaD,C,gCArC8BhC,KAAK,CAACiC,S,EA6CvC,cAAe,SAASC,CAAAA,6BAAT,CACbC,cADa,CAEbC,YAFa,CAKQ,CACrB,GAAMC,CAAAA,MAAM,CAAGjC,YAAY,CAAC+B,cAAD,CAAiBC,YAAjB,CAA3B,CACA,GAAME,CAAAA,SAAS,CAAGpC,eAAe,CAACM,kBAAD,CAAqB6B,MAArB,CAA6BD,YAA7B,CAAjC,CAEA,MAAOE,CAAAA,SAAP,CACD,CAED,GAAMR,CAAAA,MAAM,CAAG7B,UAAU,CAACsC,MAAX,CAAkB,CAC/BR,SAAS,CAAE,CACTS,IAAI,CAAE,CADG,CADoB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, ViewStyle } from 'react-native';\nimport {\n  NavigationProp,\n  NavigationDescriptor,\n  NavigationState,\n  NavigationRouteConfigMap,\n  ScreenProps,\n  NavigationContainer,\n  SwitchNavigatorConfig,\n} from 'react-navigation';\nimport {\n  createNavigator,\n  SceneView,\n  SwitchRouter,\n} from '@react-navigation/core';\nimport {\n  TransitioningView,\n  Transitioning,\n  Transition,\n} from 'react-native-reanimated';\n\nconst DEFAULT_TRANSITION = (\n  <Transition.Together>\n    <Transition.Out type=\"fade\" durationMs={200} interpolation=\"easeIn\" />\n    <Transition.In type=\"fade\" durationMs={200} />\n  </Transition.Together>\n);\n\ninterface Props {\n  navigation: NavigationProp<NavigationState> & {\n    navigationConfig: { transition?: React.ReactNode };\n  };\n  descriptors: { [key: string]: NavigationDescriptor };\n  screenProps?: ScreenProps;\n}\n\nclass AnimatedSwitchView extends React.Component<Props, {}> {\n  containerRef = React.createRef<TransitioningView>();\n\n  componentDidUpdate(prevProps: Props) {\n    const { state: prevState } = prevProps.navigation;\n    const prevActiveKey = prevState.routes[prevState.index].key;\n    const { state } = this.props.navigation;\n    const activeKey = state.routes[state.index].key;\n\n    if (activeKey !== prevActiveKey && this.containerRef.current) {\n      this.containerRef.current.animateNextTransition();\n    }\n  }\n\n  render() {\n    const { state, navigationConfig } = this.props.navigation;\n    const activeKey = state.routes[state.index].key;\n    const descriptor = this.props.descriptors[activeKey];\n    const ChildComponent = descriptor.getComponent();\n\n    const transition =\n      (navigationConfig && navigationConfig.transition) || DEFAULT_TRANSITION;\n    const transitionViewStyle = navigationConfig && navigationConfig.transition;\n\n    return (\n      <Transitioning.View\n        ref={this.containerRef}\n        transition={transition}\n        style={[styles.container, transitionViewStyle]}\n      >\n        <SceneView\n          component={ChildComponent}\n          navigation={descriptor.navigation}\n          screenProps={this.props.screenProps}\n        />\n      </Transitioning.View>\n    );\n  }\n}\n\nexport interface AnimatedSwitchNavigatorConfig extends SwitchNavigatorConfig {\n  transition?: React.ReactNode;\n  transitionViewStyle?: ViewStyle;\n}\n\nexport default function createAnimatedSwitchNavigator(\n  routeConfigMap: NavigationRouteConfigMap,\n  switchConfig: SwitchNavigatorConfig & {\n    transition?: React.ReactNode;\n  }\n): NavigationContainer {\n  const router = SwitchRouter(routeConfigMap, switchConfig);\n  const Navigator = createNavigator(AnimatedSwitchView, router, switchConfig);\n\n  return Navigator;\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n"]}